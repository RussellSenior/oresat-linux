diff --git a/board/ti/am335x/board.c b/board/ti/am335x/board.c
index 34f987c2b7..278382e78b 100644
--- a/board/ti/am335x/board.c
+++ b/board/ti/am335x/board.c
@@ -948,6 +948,8 @@ U_BOOT_DRVINFO(am335x_eth) = {
 };
 #endif
 
+
+
 #ifdef CONFIG_SPL_LOAD_FIT
 int board_fit_config_name_match(const char *name)
 {
@@ -978,6 +980,16 @@ int board_fit_config_name_match(const char *name)
 			return 0;
 		}
 	}
+	else if (oresat_name_compare(name, "oresat-c3-"))
+		return 0;
+	else if (oresat_name_compare(name, "oresat-gps-"))
+		return 0;
+	else if (oresat_name_compare(name, "oresat-star-tracker-"))
+		return 0;
+	else if (oresat_name_compare(name, "oresat-dxwifi-"))
+		return 0;
+	else if (oresat_name_compare(name, "oresat-cfc-"))
+		return 0;
 	return -1;
 }
 #endif
diff --git a/board/ti/am335x/board.h b/board/ti/am335x/board.h
index 1284c160d8..0ff6a30db7 100644
--- a/board/ti/am335x/board.h
+++ b/board/ti/am335x/board.h
@@ -10,6 +10,8 @@
 #ifndef _BOARD_H_
 #define _BOARD_H_
 
+#include <string.h>
+
 /**
  * AM335X (EMIF_4D) EMIF REG_COS_COUNT_1, REG_COS_COUNT_2, and
  * REG_PR_OLD_COUNT values to avoid LCDC DMA FIFO underflows and Frame
@@ -80,6 +82,38 @@ static inline int board_is_icev2(void)
 	return board_ti_is("A335_ICE") && !strncmp("2", board_ti_get_rev(), 1);
 }
 
+static inline int oresat_name_compare(const char *name, const char *name2) {
+		char *rev = board_ti_get_rev()
+		ssize_t name2_len = strlen(name2);
+		char buffer[name2_len  + 4];
+		strncpy(buffer, name2, name2_len);
+		strncpy(&buffer[name2_len], rev, 2);
+		strncpy(&buffer[name2_len], &rev[2], 2);
+		if (!strcmp(name, buffer))
+			return 0;
+		return -1;
+}
+
+static inline int board_is_oresat_c3(const char *name) {
+	return board_ti_is("A335OSC3");
+}
+
+static inline int board_is_oresat_gps(const char *name) {
+	return board_ti_is("A335OGPS");
+}
+
+static inline int board_is_oresat_st(const char *name) {
+	return board_ti_is("A335OSST");
+}
+
+static inline int board_is_oresat_dxwifi(const char *name) {
+	return board_ti_is("A335ODWF");
+}
+
+static inline int board_is_oresat_cfc(const char *name) {
+	return board_ti_is("A335OCFC");
+}
+
 /*
  * We have three pin mux functions that must exist.  We must be able to enable
  * uart0, for initial output and i2c0 to read the main EEPROM.  We then have a
